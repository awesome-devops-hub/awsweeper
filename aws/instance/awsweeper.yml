Mappings:
  AmiMap:
    ap-northeast-2:
      "ami": "ami-0df7513a4150ce906"

Parameters:
  Owner:
    Description: The owner of the resource.
    Type: String
  InstanceType:
    Description: What instance type to use
    Type: String
  KeyName:
    Description: What Key Name instance uses.
    Type: String
  VpcId:
    Description: VPC to deploy to.
    Type: String
  SubnetInstance1:
    Description: Subnet for EC2 instance.
    Type: String
  SubnetInstance2:
    Description: Subnet for EC2 instance.
    Type: String
  AwsweeperS3Bucket:
    Description: S3 for storing awsweeper log in EC2 instance.
    Type: String
  ScaleUpRecurrence:
    Description: Recurrence of ScaleUpScheduledAction.
    Type: String
  ScaleDownRecurrence:
    Description: Recurrence of ScaleDownScheduledAction.
    Type: String
  ScaleUpDesiredCapacity:
    Description: DesiredCapacity of ScaleUpScheduledAction.
    Type: String
  ScaleDownDesiredCapacity:
    Description: DesiredCapacity of ScaleDownScheduledAction.
    Type: String
  MinSize:
    Description: AutoScaling Minsize.
    Type: String
  MaxSize:
    Description: AutoScaling Maxsize.
    Type: String
  DefaultDesiredCapacity:
    Description: Default DesiredCapacity of AutoScaling.
    Type: String
  DateTime:
    Description: Date time to differentiate UserData each deployment.
    Type: String
  AwsweeperVersion:
    Description: The version of awsweeper.
    Type: String
  AwsweeperImage:
    Description: The docker image address of awsweeper.
    Type: String
  StackupVersion:
    Description: The version of stackup.
    Type: String

Resources:
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: 
      - LaunchConfiguration
    Properties:
      LaunchConfigurationName:
        Ref: LaunchConfiguration
      DesiredCapacity: !Ref DefaultDesiredCapacity
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      Tags:
        - Key: Owner
          Value: !Ref Owner
          PropagateAtLaunch: 'true'
      VPCZoneIdentifier:
        - !Ref SubnetInstance1
        - !Ref SubnetInstance2
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true
      
  ScaleUpScheduledAction:
    Type: 'AWS::AutoScaling::ScheduledAction'
    Properties:
      AutoScalingGroupName: !Ref 'AutoScalingGroup'
      DesiredCapacity: !Ref ScaleUpDesiredCapacity
      MinSize: !Ref MinSize
      Recurrence: !Ref ScaleUpRecurrence

  ScaleDownScheduledAction:
    Type: 'AWS::AutoScaling::ScheduledAction'
    Properties:
      AutoScalingGroupName: !Ref 'AutoScalingGroup'
      DesiredCapacity: !Ref ScaleDownDesiredCapacity
      MinSize: !Ref MinSize
      Recurrence: !Ref ScaleDownRecurrence

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    DependsOn: 
    - InstanceSecurityGroup
    - RootInstanceProfile
    Properties:
      ImageId: !FindInMap [AmiMap, !Ref "AWS::Region", ami]
      AssociatePublicIpAddress: true
      IamInstanceProfile: !Ref RootInstanceProfile
      SecurityGroups: 
        - Ref: InstanceSecurityGroup
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '8'
        - DeviceName: "/dev/sdc"
          VirtualName: ephemeral0
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          DATE_TIME="${DateTime}"
          AWSWEEPER_VERSION="${AwsweeperVersion}"
          AWSWEEPER_IMAGE="${AwsweeperImage}"

          export PATH="$PATH:/bin:/sbin:/usr/bin:/usr/local/bin"
          echo "INFO: [${!DATE_TIME}] Startup awsweeper ${!AWSWEEPER_VERSION} via docker image ${!AWSWEEPER_IMAGE}"
          cd /tmp/ && git clone https://github.com/awesome-devops-hub/awsweeper.git
          cd /tmp/awsweeper/
          [ ! -d ./tmp/ ] && mkdir ./tmp/
          echo "${!AWSWEEPER_IMAGE}" > ./tmp/artifacts.conf
          source ./auto/set-env-vars
          [ -f ./tmp/artifacts.conf ] && export AWSWEEPER_IMAGE=$(cat ./tmp/artifacts.conf)

          login_ecr

          echo -e "Wait 60s until all deployment resources are tagged properly"
          sleep 60

          docker-compose run --rm awsweeper

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for EC2
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Owner
          Value: !Ref Owner
  
  RootInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn: 
    - InstanceExecutionRole
    Properties:
      Path: /
      Roles: [!Ref InstanceExecutionRole]
  
  InstanceExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: awsweeper-InstanceExecutionRole-function
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DeleteNetworkInterface'
                  - 'cloudwatch:PutMetricData'
                  - 'ec2:*'
                  - 'iam:*'
                  - 'autoscaling:*'
                  - 'elasticloadbalancing:*'
                  - 'ecs:*'
                  - 'cloudformation:*'
                  - 'elasticfilesystem:*'
                  - 'ecr:*'
                  - 'apigateway:*'
                  - 'lambda:*'
                  - 'sns:*'
                  - 'sqs:*'
                  - 'events:*'
                  - 'cloudwatch:*'
                  - 'logs:*'
                  - 's3:*'
                  - 'dynamodb:*'
                  - 'kms:*'
                Resource: '*'
        - PolicyName: AwsweeperS3BucketIAMRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 's3:ListBucket'
                  - 's3:GetBucketLocation'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
                Resource:
                  - !Sub arn:aws:s3:::${AwsweeperS3Bucket}/*
                Effect: Allow
      Tags:
        - Key: Owner
          Value: !Ref Owner

Outputs:
  StackupVersion:
    Value: !Ref StackupVersion
  StackupTarget:
    Value: ec2
  IamRoleArn:
    Value: !GetAtt
      - InstanceExecutionRole
      - Arn
  AutoscalingGroup:
    Value: !Ref AutoScalingGroup
